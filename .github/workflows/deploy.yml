name: Deploy to Digital Ocean

on:
  push:
    branches:
      - main
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 18
    
    # - name: Install dependencies
    #   run: npm ci

    - name: Create environment file
      run: |
        if [ "${{ github.ref }}" == "refs/heads/main" ]; then
          echo "NODE_ENV=production" >> ./config/production.env
          echo "DATABASE_URL=${{ secrets.PRODUCTION_DATABASE_URL }}" >> ./config/production.env
          echo "OPEN_AI_KEY=${{ secrets.PRODUCTION_OPEN_AI_KEY }}" >> ./config/production.env
          echo "OPEN_AI_ORG=${{ secrets.PRODUCTION_OPEN_AI_ORG }}" >> ./config/production.env
          echo "GOOGLE_CLIENT_ID=${{ secrets.PRODUCTION_GOOGLE_CLIENT_ID }}" >> ./config/production.env
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.PRODUCTION_GOOGLE_CLIENT_SECRET }}" >> ./config/production.env
          echo "GOOGLE_REDIRECT_URL=${{ secrets.PRODUCTION_GOOGLE_REDIRECT_URL }}" >> ./config/production.env
          echo "GITHUB_CLIENT_ID=${{ secrets.PRODUCTION_GITHUB_CLIENT_ID }}" >> ./config/production.env
          echo "GITHUB_CLIENT_SECRET=${{ secrets.PRODUCTION_GITHUB_CLIENT_SECRET }}" >> ./config/production.env
          echo "GITHUB_REDIRECT_URL=${{ secrets.PRODUCTION_GITHUB_REDIRECT_URL }}" >> ./config/production.env
          echo "JWT_SECRET=${{ secrets.PRODUCTION_JWT_SECRET }}" >> ./config/production.env
          echo "FRONTEND_URL=${{ secrets.PRODUCTION_FRONTEND_URL }}" >> ./config/production.env
          echo "CLOUDINARY_CLOUD_NAME=${{ secrets.PRODUCTION_CLOUDINARY_CLOUD_NAME }}" >> ./config/production.env
          echo "CLOUDINARY_API_KEY=${{ secrets.PRODUCTION_CLOUDINARY_API_KEY }}" >> ./config/production.env
          echo "CLOUDINARY_API_SECRET=${{ secrets.PRODUCTION_CLOUDINARY_API_SECRET }}" >> ./config/production.env
        else
          echo "NODE_ENV=staging" >> ./config/staging.env
          echo "DATABASE_URL=${{ secrets.STAGING_DATABASE_URI }}" >> ./config/production.env
          echo "OPEN_AI_KEY=${{ secrets.PRODUCTION_OPEN_AI_KEY }}" >> ./config/production.env
          echo "OPEN_AI_ORG=${{ secrets.PRODUCTION_OPEN_AI_ORG }}" >> ./config/production.env
          echo "GOOGLE_CLIENT_ID=${{ secrets.PRODUCTION_GOOGLE_CLIENT_ID }}" >> ./config/production.env
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.PRODUCTION_GOOGLE_CLIENT_SECRET }}" >> ./config/production.env
          echo "GOOGLE_REDIRECT_URL=${{ secrets.PRODUCTION_GOOGLE_REDIRECT_URL }}" >> ./config/production.env
          echo "GITHUB_CLIENT_ID=${{ secrets.PRODUCTION_GITHUB_CLIENT_ID }}" >> ./config/production.env
          echo "GITHUB_CLIENT_SECRET=${{ secrets.PRODUCTION_GITHUB_CLIENT_SECRET }}" >> ./config/production.env
          echo "GITHUB_REDIRECT_URL=${{ secrets.PRODUCTION_GITHUB_REDIRECT_URL }}" >> ./config/production.env
          echo "JWT_SECRET=${{ secrets.PRODUCTION_JWT_SECRET }}" >> ./config/production.env
          echo "FRONTEND_URL=${{ secrets.PRODUCTION_FRONTEND_URL }}" >> ./config/production.env
          echo "CLOUDINARY_CLOUD_NAME=${{ secrets.PRODUCTION_CLOUDINARY_CLOUD_NAME }}" >> ./config/production.env
          echo "CLOUDINARY_API_KEY=${{ secrets.PRODUCTION_CLOUDINARY_API_KEY }}" >> ./config/production.env
          echo "CLOUDINARY_API_SECRET=${{ secrets.PRODUCTION_CLOUDINARY_API_SECRET }}" >> ./config/production.env
        fi

    - name: Set up SSH
      env:
        PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        echo "$PRIVATE_KEY" > private_key.pem
        chmod 600 private_key.pem
        echo "Host *" > ~/.ssh/config
        echo "  AddKeysToAgent yes" >> ~/.ssh/config
        echo "  UseKeychain no" >> ~/.ssh/config
        echo "  IdentityFile $(pwd)/private_key.pem" >> ~/.ssh/config
        echo "  StrictHostKeyChecking no" >> ~/.ssh/config
        ssh-keyscan your_droplet_ip >> ~/.ssh/known_hosts
        ssh-agent -a $SSH_AUTH_SOCK
        ssh-add -k "$(pwd)/private_key.pem"

    - name: Deploy to Digital Ocean Droplet
      env:
        BRANCH_NAME: ${{ github.ref_name }}
      run: |
        if [ "$BRANCH_NAME" = "main" ]; then
          DEPLOY_PATH="~/gripApp"
        elif [ "$BRANCH_NAME" = "dev" ]; then
          DEPLOY_PATH="~/gripAppStaging"
        else
          exit 1
        fi
        rsync -avzr --delete --exclude '.git' --exclude '.github' --exclude 'node_modules' . root@68.183.74.216:$DEPLOY_PATH
        ssh root@68.183.74.216 "cd $DEPLOY_PATH && npm install && npm run build && pm2 restart app"
