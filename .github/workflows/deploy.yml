name: Deploy to Digital Ocean

on:
  push:
    branches:
      - main
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Set up SSH
      env:
        PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        PASSPHRASE: ${{ secrets.SSH_PRIVATE_KEY_PASSPHRASE }}
      run: |
        mkdir ~/.ssh
        touch ~/.ssh/config
        SSH_AUTH_SOCK=$(mktemp -u /tmp/ssh_agent.XXXXXX.sock)
        echo "SSH_AUTH_SOCK=$SSH_AUTH_SOCK" >> $GITHUB_ENV
        eval "$(ssh-agent -a $SSH_AUTH_SOCK)"
        echo "$PRIVATE_KEY" > private_key.pem
        chmod 600 private_key.pem
        echo "Host *" > ~/.ssh/config
        echo "  AddKeysToAgent yes" >> ~/.ssh/config
        echo "  IdentityFile $(pwd)/private_key.pem" >> ~/.ssh/config
        echo "  StrictHostKeyChecking no" >> ~/.ssh/config
        ssh-keyscan 68.183.74.216 >> ~/.ssh/known_hosts
        echo "$PASSPHRASE" | ssh-add "$(pwd)/private_key.pem"

    - name: Deploy to Digital Ocean Droplet
      env:
        BRANCH_NAME: ${{ github.ref_name }}
      run: |
        if [ "$BRANCH_NAME" = "main" ]; then
          DEPLOY_PATH="~/gripApp"
        elif [ "$BRANCH_NAME" = "dev" ]; then
          DEPLOY_PATH="~/gripAppStaging"
        else
          exit 1
        fi
        rsync -avzr --delete --exclude '.git' --exclude '.github' --exclude 'node_modules' . root@68.183.74.216:$DEPLOY_PATH

    - name: Create Env Files
      env:
        BRANCH_NAME: ${{ github.ref_name }}
      run: |
        if [ "$BRANCH_NAME" = "main" ]; then
          DEPLOY_PATH="~/gripApp"
        elif [ "$BRANCH_NAME" = "dev" ]; then
          DEPLOY_PATH="~/gripAppStaging"
        else
          exit 1
        fi

        ENV_CONTENT="NODE_ENV=$(echo $BRANCH_NAME | tr '[:lower:]' '[:upper:]')
        DATABASE_URL=${{ secrets.PRODUCTION_DATABASE_URI }}
        OPEN_AI_KEY=${{ secrets.PRODUCTION_OPEN_AI_KEY }}
        OPEN_AI_ORG=${{ secrets.PRODUCTION_OPEN_AI_ORG }}
        GOOGLE_CLIENT_ID=${{ secrets.PRODUCTION_GOOGLE_CLIENT_ID }}
        GOOGLE_CLIENT_SECRET=${{ secrets.PRODUCTION_GOOGLE_CLIENT_SECRET }}
        GOOGLE_REDIRECT_URL=${{ secrets.PRODUCTION_GOOGLE_REDIRECT_URL }}
        GITHUB_CLIENT_ID=${{ secrets.PRODUCTION_GITHUB_CLIENT_ID }}
        GITHUB_CLIENT_SECRET=${{ secrets.PRODUCTION_GITHUB_CLIENT_SECRET }}
        GITHUB_REDIRECT_URL=${{ secrets.PRODUCTION_GITHUB_REDIRECT_URL }}
        JWT_SECRET=${{ secrets.PRODUCTION_JWT_SECRET }}
        FRONTEND_URL=${{ secrets.PRODUCTION_FRONTEND_URL }}
        CLOUDINARY_CLOUD_NAME=${{ secrets.PRODUCTION_CLOUDINARY_CLOUD_NAME }}
        CLOUDINARY_API_KEY=${{ secrets.PRODUCTION_CLOUDINARY_API_KEY }}
        CLOUDINARY_API_SECRET=${{ secrets.PRODUCTION_CLOUDINARY_API_SECRET }}"
        ssh root@68.183.74.216 "mkdir -p $DEPLOY_PATH/config && echo \"$ENV_CONTENT\" > $DEPLOY_PATH/config/.$(echo $BRANCH_NAME | tr '[:upper:]' '[:lower:]').env"

    - name: Restart Service
      env:
        BRANCH_NAME: ${{ github.ref_name }}
      run: |
        if [ "$BRANCH_NAME" = "main" ]; then
          DEPLOY_PATH="~/gripApp"
          PROCESS_NAME="gripApp"
        elif [ "$BRANCH_NAME" = "dev" ]; then
          DEPLOY_PATH="~/gripAppStaging"
          PROCESS_NAME="gripAppStaging"
        else
          exit 1
        fi

        ssh root@68.183.74.216 "cd $DEPLOY_PATH && rm -rf node_modules && (pnpm --version || npm install -g pnpm) && pnpm install && pnpm run build && (pm2 delete $PROCESS_NAME || true) && pm2 start pnpm --name $PROCESS_NAME -- run start:$(echo $BRANCH_NAME | tr '[:upper:]' '[:lower:]')"